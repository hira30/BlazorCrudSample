@page "/edit"
@page "/edit/{Id:int}"
@inject BookDbContext Context

@if (Id is null)
{
    <PageTitle>本の登録</PageTitle>
    <h3>本の登録</h3>
}
else
{
    <PageTitle>編集 "@Book.Title"</PageTitle>
    <h3>編集 "@Book.Title"</h3>
}

<EditForm Model="Book" OnSubmit="HandleSubmit" FormName="BookForm">
     <div>
         <label for="title">タイトル</label>
         <InputText id="title" @bind-Value="Book.Title" class="form-control" />
     </div>
    <div>
        <label for="author">著者</label>
        <InputText id="author" @bind-Value="Book.Author" class="form-control" />
    </div>
     <div>
         <label for="publisher">出版社</label>
         <InputText id="publisher" @bind-Value="Book.Publisher" class="form-control" />
     </div>
     <div>
         <label for="publishedYear">出版年</label>
        <InputNumber id="publishedYear" @bind-Value="Book.PublishedYear" class="form-control" />
     </div>

     <button type="submit" class="btn btn-primary">保存</button>
 </EditForm>

 <p>@Message</p>

@code {
    [Parameter]
    public int? Id { get; set; } = null;

    [SupplyParameterFromForm]
    public Book Book { get; set; } = new();

    private string Message = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var book = await Context.Books.FindAsync(Id);
            if (book is not null)
            {
                Book.Title ??= book.Title;
                Book.Author ??= book.Author;
                Book.Publisher ??= book.Publisher;
                Book.PublishedYear = book.PublishedYear;
            }
        }
    }

    private async Task HandleSubmit()
    {
        if (Id is not null)
        {
            await Update();
        }
        else
        {
            await Create();
        }
    }

    private async Task Update()
    {
        var book = await Context.Books.FindAsync(Id);
        if (book is not null)
        {
            book.Title = Book.Title;
            book.Author = Book.Author;
            book.Publisher = Book.Publisher;
            book.PublishedYear = Book.PublishedYear;

            var result = await Context.SaveChangesAsync();

            if (result == 1)
            {
                Message = "更新成功";
            }
            else
            {
                Message = "更新失敗";
            }
        }
    }

    private async Task Create()
    {
        Context.Books.Add(Book);
        var result = await Context.SaveChangesAsync();

        if (result == 1)
        {
            Message = "追加成功";
        }
        else
        {
            Message = "追加失敗";
        }
    }
}
